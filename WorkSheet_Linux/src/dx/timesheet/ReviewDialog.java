/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package dx.timesheet;

import java.io.IOException;
import java.net.MalformedURLException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.ListModel;
import javax.swing.SwingWorker;

/**
 *
 * The class is used for set Review List in Review Dialog. 
 */
public class ReviewDialog extends javax.swing.JDialog {
    java.awt.Frame f;
    String selected_user="";
    Activity usermap;
    ReadXml rd=new ReadXml();
    public int index;
    ArrayList<HashMap<String,String>> mylist1 = new ArrayList<HashMap<String, String>>();
    SmallLoaderDialog infD;
    String task_id;
    /**
     * Creates new form ReviewDialog
     */
    public ReviewDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        listUserReview.setSelectedIndex(0);
     //   listUserReview.getScrollableTracksViewportWidth();
    }

    public ReviewDialog() {
        
        
    }
    public void initializeList(){
     
    }
    /**
     * This function is used for set Review user List. 
     */
    public void setListModel(ListModel lm){

        listUserReview.setModel(lm);
    }
    /**
     * This function is used for get Selected user in Review List. 
     */
    public String getSelectedUser(){
        return selected_user;
    }
    
  
    
    public void printHashmap(){
        System.out.println("Printing");
        for(int i=0;i<ReadXml.mylist.size();i++){
            System.out.println("Value in  list1 hashmap is>> "+ReadXml.mylist.get(i).keySet());
        }
    }
    public void printValues(int index){
        String f=ReadXml.mylist.get(index).keySet().toString();
        f=f.replaceAll("\\[", "").replaceAll("\\]", "");
     //   f=f.replaceAll("]", "");
       System.out.println("Value at this index>>"+f); 
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnOk = new javax.swing.JButton();
        btnCancelReview = new javax.swing.JButton();
        lblInput = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listUserReview = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        btnOk.setText("Ok");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnCancelReview.setText("Cancel Review");
        btnCancelReview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelReviewActionPerformed(evt);
            }
        });

        lblInput.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblInput.setText("Select user for review:");

        jPanel2.setBackground(new java.awt.Color(15, 161, 208));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 222, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );

        listUserReview.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(listUserReview);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblInput)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancelReview))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 16, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblInput)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOk)
                    .addComponent(btnCancelReview))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        public void setTaskId(String task_id){
          this.task_id=task_id;
      }
    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
   //  selected_user=listUserReview.getSelectedValue().toString();
   //     System.out.println(listUserReview.getSelectedValue().toString());
        //infD = new SmallLoaderDialog(f, true);
        new BackgroundWorker().execute();
       // showLoaderDialog2();
        
    }//GEN-LAST:event_btnOkActionPerformed
   public void setDialog(java.awt.Frame parent ){
       f=parent;
   }
   public java.awt.Frame getDialog(){
        return f;
       
   }
   /**
    * This function is used for show Loader after Selected user in Review List. 
    */
    public void showLoaderDialog2() {
        infD.setLocationRelativeTo(TaskPanel.panelforScrollPane);
        infD.setVisible(true);
        infD.jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        
    }
    /**
    * This function is used for hide Loader after Selected user in Review List. 
    */
    public void hideLoaderDialog(){
        if(infD.isVisible()){
            infD.setVisible(false);
        }
    }
   /**
    * This Swing Worker class is used send review to server. 
    */
    class BackgroundWorker extends SwingWorker<Integer, Integer> {
        @Override
        protected Integer doInBackground() throws Exception {
        printValues(listUserReview.getSelectedIndex());
        String userid=ReadXml.mylist.get(listUserReview.getSelectedIndex()).keySet().toString();
       userid=userid.replaceAll("\\[", "").replaceAll("\\]", "");
        String response=null;
        
        System.out.println("UserId is>> "+userid+"task_id is>> "+task_id); 
        
        try {
            response=rd.sendReview(userid,task_id,PopUpLogin.userId);
        }  catch (IOException ex) {
            Logger.getLogger(ReviewDialog.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
        setVisible(false);
            return 0;
        }
        @Override
        protected void done() {
            hideLoaderDialog();
        }
    }
    private void btnCancelReviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelReviewActionPerformed
       selected_user="";
        dispose();
    }//GEN-LAST:event_btnCancelReviewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReviewDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReviewDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReviewDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReviewDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ReviewDialog dialog = new ReviewDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnCancelReview;
    public static javax.swing.JButton btnOk;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel2;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel lblInput;
    public static javax.swing.JList listUserReview;
    // End of variables declaration//GEN-END:variables
}
